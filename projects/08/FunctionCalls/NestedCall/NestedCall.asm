//translating : 
//translating : 
//translating : function Sys.init 0
(Sys.init)
//translating : push constant 4000	// test THIS and THAT context save
@4000	//
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop pointer 0
@SP
M=M-1
@SP
A=M
D=M
@3
M=D
//translating : push constant 5000
@5000
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop pointer 1
@SP
M=M-1
@SP
A=M
D=M
@4
M=D
//translating : call Sys.main 0
@RETURN_ADDRES0
D=A
@SP
A=M
M=D
@SP
AM=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
AM=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
AM=M+1
@0
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(RETURN_ADDRES0)
//translating : pop temp 1
@5
D=A
@1
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//translating : label LOOP
(LOOP)
//translating : goto LOOP
@LOOP
0;JMP
//translating : 
//translating : 
//translating : function Sys.main 5
(Sys.main)
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
@0
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : push constant 4001
@4001
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop pointer 0
@SP
M=M-1
@SP
A=M
D=M
@3
M=D
//translating : push constant 5001
@5001
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop pointer 1
@SP
M=M-1
@SP
A=M
D=M
@4
M=D
//translating : push constant 200
@200
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop local 1
@1
D=A
@LCL
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//translating : push constant 40
@40
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop local 2
@2
D=A
@LCL
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//translating : push constant 6
@6
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop local 3
@3
D=A
@LCL
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//translating : push constant 123
@123
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : call Sys.add12 1
@RETURN_ADDRES1
D=A
@SP
A=M
M=D
@SP
AM=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
AM=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
AM=M+1
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(RETURN_ADDRES1)
//translating : pop temp 0
@5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//translating : push local 0
@LCL
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//translating : push local 1
@LCL
D=M
@1
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//translating : push local 2
@LCL
D=M
@2
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//translating : push local 3
@LCL
D=M
@3
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//translating : push local 4
@LCL
D=M
@4
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//translating : add
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
AM=M+1
//translating : add
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
AM=M+1
//translating : add
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
AM=M+1
//translating : add
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
AM=M+1
//translating : return
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
A=M-D
D=M
@RET_VAl
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@2
D=A
@endFrame
A=M-D
D=M
@THIS
M=D
@3
D=A
@endFrame
A=M-D
D=M
@ARG
M=D
@4
D=A
@endFrame
A=M-D
D=M
@LCL
M=D
@RET_VAl
A=M
0;JMP
//translating : 
//translating : 
//translating : function Sys.add12 0
(Sys.add12)
//translating : push constant 4002
@4002
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop pointer 0
@SP
M=M-1
@SP
A=M
D=M
@3
M=D
//translating : push constant 5002
@5002
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : pop pointer 1
@SP
M=M-1
@SP
A=M
D=M
@4
M=D
//translating : push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//translating : push constant 12
@12
D=A
@SP
A=M
M=D
@SP
AM=M+1
//translating : add
@SP
AM=M-1
D=M
@SP
AM=M-1
M=D+M
@SP
AM=M+1
//translating : return
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
A=M-D
D=M
@RET_VAl
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@endFrame
A=M-1
D=M
@THAT
M=D
@2
D=A
@endFrame
A=M-D
D=M
@THIS
M=D
@3
D=A
@endFrame
A=M-D
D=M
@ARG
M=D
@4
D=A
@endFrame
A=M-D
D=M
@LCL
M=D
@RET_VAl
A=M
0;JMP
