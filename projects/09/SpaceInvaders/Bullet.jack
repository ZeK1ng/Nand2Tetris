class Bullet {
    field int x, y; 
    field boolean status;

    constructor Bullet new() {
        let x = 0;
        let y = 0;
        return this;
    }

   
    method void setXY(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        return;
    }
    method int getX() { 
        return x; 
    }
    method int getY() {
         return y; 
    }

    method void fire(int Ax, int Ay) {
        do setXY(Ax, Ay);
        let status =true;
        
        do moveUp();
        return;
    }


    method void moveUp() {

        while (y > 5) {
            do erase();
            let y = y - 5;
            do draw();
            do Sys.wait(10);
        }
        do erase();
        return;
    }
   
    method boolean getStatus() { 
        return status;
    }
    method void draw() {
        var int memAddress;
        let memAddress = 16384 + (x/16) + (y*32);
	    do Memory.poke(memAddress + 0, 0);
	    do Memory.poke(memAddress + 32, 0);
	    do Memory.poke(memAddress + 64, 0);
	    do Memory.poke(memAddress + 96, 0);
	    do Memory.poke(memAddress + 128, 0);
	    do Memory.poke(memAddress + 160, 0);
	    do Memory.poke(memAddress + 192, 128);
	    do Memory.poke(memAddress + 224, 448);
	    do Memory.poke(memAddress + 256, 992);
	    do Memory.poke(memAddress + 288, 2032);
	    do Memory.poke(memAddress + 320, 2032);
	    do Memory.poke(memAddress + 352, 448);
	    do Memory.poke(memAddress + 384, 128);
	    do Memory.poke(memAddress + 416, 128);
	    do Memory.poke(memAddress + 448, 0);
	    do Memory.poke(memAddress + 480, 0);
	    return;
    }

    method void erase() {
        var int memAddress;
        let memAddress = 16384 + (x/16) + (y*32);
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }
   
  
    /** makes bullet fly upward **/
  
     method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

}